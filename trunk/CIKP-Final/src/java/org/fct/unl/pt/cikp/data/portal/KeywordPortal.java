package org.fct.unl.pt.cikp.data.portal;
// Generated 28/Mar/2009 1:29:07 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * KeywordPortal generated by hbm2java
 */
@Entity
@Table(name="keyword_portal"
    ,catalog="cikp"
)
public class KeywordPortal  implements java.io.Serializable {


     private Integer keywordId;
     private String keyword;
     private Set<KnowledgeItemPortal> knowledgeItemPortals = new HashSet<KnowledgeItemPortal>(0);

    public KeywordPortal() {
    }

	
    public KeywordPortal(String keyword) {
        this.keyword = keyword;
    }
    public KeywordPortal(String keyword, Set<KnowledgeItemPortal> knowledgeItemPortals) {
       this.keyword = keyword;
       this.knowledgeItemPortals = knowledgeItemPortals;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="Keyword_ID", unique=true, nullable=false)
    public Integer getKeywordId() {
        return this.keywordId;
    }
    
    public void setKeywordId(Integer keywordId) {
        this.keywordId = keywordId;
    }
    
    @Column(name="Keyword", nullable=false, length=100)
    public String getKeyword() {
        return this.keyword;
    }
    
    public void setKeyword(String keyword) {
        this.keyword = keyword;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="keywordPortals")
    public Set<KnowledgeItemPortal> getKnowledgeItemPortals() {
        return this.knowledgeItemPortals;
    }
    
    public void setKnowledgeItemPortals(Set<KnowledgeItemPortal> knowledgeItemPortals) {
        this.knowledgeItemPortals = knowledgeItemPortals;
    }




}


